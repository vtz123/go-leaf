// Code generated by protoc-gen-go. DO NOT EDIT.
// source: example.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SnowflakeRequest struct {
	MachineId            int32    `protobuf:"varint,1,opt,name=machineId,proto3" json:"machineId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SnowflakeRequest) Reset()         { *m = SnowflakeRequest{} }
func (m *SnowflakeRequest) String() string { return proto.CompactTextString(m) }
func (*SnowflakeRequest) ProtoMessage()    {}
func (*SnowflakeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_15a1dc8d40dadaa6, []int{0}
}

func (m *SnowflakeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnowflakeRequest.Unmarshal(m, b)
}
func (m *SnowflakeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnowflakeRequest.Marshal(b, m, deterministic)
}
func (m *SnowflakeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnowflakeRequest.Merge(m, src)
}
func (m *SnowflakeRequest) XXX_Size() int {
	return xxx_messageInfo_SnowflakeRequest.Size(m)
}
func (m *SnowflakeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SnowflakeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SnowflakeRequest proto.InternalMessageInfo

func (m *SnowflakeRequest) GetMachineId() int32 {
	if m != nil {
		return m.MachineId
	}
	return 0
}

type SegmentRequest struct {
	BizTag               string   `protobuf:"bytes,1,opt,name=biz_tag,json=bizTag,proto3" json:"biz_tag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SegmentRequest) Reset()         { *m = SegmentRequest{} }
func (m *SegmentRequest) String() string { return proto.CompactTextString(m) }
func (*SegmentRequest) ProtoMessage()    {}
func (*SegmentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_15a1dc8d40dadaa6, []int{1}
}

func (m *SegmentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentRequest.Unmarshal(m, b)
}
func (m *SegmentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentRequest.Marshal(b, m, deterministic)
}
func (m *SegmentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentRequest.Merge(m, src)
}
func (m *SegmentRequest) XXX_Size() int {
	return xxx_messageInfo_SegmentRequest.Size(m)
}
func (m *SegmentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentRequest proto.InternalMessageInfo

func (m *SegmentRequest) GetBizTag() string {
	if m != nil {
		return m.BizTag
	}
	return ""
}

type SnowflakeReply struct {
	Errno                int32    `protobuf:"varint,1,opt,name=Errno,proto3" json:"Errno,omitempty"`
	Mag                  string   `protobuf:"bytes,2,opt,name=Mag,proto3" json:"Mag,omitempty"`
	Id                   int64    `protobuf:"varint,3,opt,name=Id,proto3" json:"Id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SnowflakeReply) Reset()         { *m = SnowflakeReply{} }
func (m *SnowflakeReply) String() string { return proto.CompactTextString(m) }
func (*SnowflakeReply) ProtoMessage()    {}
func (*SnowflakeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_15a1dc8d40dadaa6, []int{2}
}

func (m *SnowflakeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnowflakeReply.Unmarshal(m, b)
}
func (m *SnowflakeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnowflakeReply.Marshal(b, m, deterministic)
}
func (m *SnowflakeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnowflakeReply.Merge(m, src)
}
func (m *SnowflakeReply) XXX_Size() int {
	return xxx_messageInfo_SnowflakeReply.Size(m)
}
func (m *SnowflakeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SnowflakeReply.DiscardUnknown(m)
}

var xxx_messageInfo_SnowflakeReply proto.InternalMessageInfo

func (m *SnowflakeReply) GetErrno() int32 {
	if m != nil {
		return m.Errno
	}
	return 0
}

func (m *SnowflakeReply) GetMag() string {
	if m != nil {
		return m.Mag
	}
	return ""
}

func (m *SnowflakeReply) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type SegmentReply struct {
	Errno                int32    `protobuf:"varint,1,opt,name=Errno,proto3" json:"Errno,omitempty"`
	Mag                  string   `protobuf:"bytes,2,opt,name=Mag,proto3" json:"Mag,omitempty"`
	Id                   int64    `protobuf:"varint,3,opt,name=Id,proto3" json:"Id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SegmentReply) Reset()         { *m = SegmentReply{} }
func (m *SegmentReply) String() string { return proto.CompactTextString(m) }
func (*SegmentReply) ProtoMessage()    {}
func (*SegmentReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_15a1dc8d40dadaa6, []int{3}
}

func (m *SegmentReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentReply.Unmarshal(m, b)
}
func (m *SegmentReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentReply.Marshal(b, m, deterministic)
}
func (m *SegmentReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentReply.Merge(m, src)
}
func (m *SegmentReply) XXX_Size() int {
	return xxx_messageInfo_SegmentReply.Size(m)
}
func (m *SegmentReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentReply.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentReply proto.InternalMessageInfo

func (m *SegmentReply) GetErrno() int32 {
	if m != nil {
		return m.Errno
	}
	return 0
}

func (m *SegmentReply) GetMag() string {
	if m != nil {
		return m.Mag
	}
	return ""
}

func (m *SegmentReply) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func init() {
	proto.RegisterType((*SnowflakeRequest)(nil), "proto.SnowflakeRequest")
	proto.RegisterType((*SegmentRequest)(nil), "proto.SegmentRequest")
	proto.RegisterType((*SnowflakeReply)(nil), "proto.SnowflakeReply")
	proto.RegisterType((*SegmentReply)(nil), "proto.SegmentReply")
}

func init() { proto.RegisterFile("example.proto", fileDescriptor_15a1dc8d40dadaa6) }

var fileDescriptor_15a1dc8d40dadaa6 = []byte{
	// 236 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4d, 0xad, 0x48, 0xcc,
	0x2d, 0xc8, 0x49, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a, 0x06, 0x5c,
	0x02, 0xc1, 0x79, 0xf9, 0xe5, 0x69, 0x39, 0x89, 0xd9, 0xa9, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5,
	0x25, 0x42, 0x32, 0x5c, 0x9c, 0xb9, 0x89, 0xc9, 0x19, 0x99, 0x79, 0xa9, 0x9e, 0x29, 0x12, 0x8c,
	0x0a, 0x8c, 0x1a, 0xac, 0x41, 0x08, 0x01, 0x25, 0x4d, 0x2e, 0xbe, 0xe0, 0xd4, 0xf4, 0xdc, 0xd4,
	0xbc, 0x12, 0x98, 0x7a, 0x71, 0x2e, 0xf6, 0xa4, 0xcc, 0xaa, 0xf8, 0x92, 0xc4, 0x74, 0xb0, 0x6a,
	0xce, 0x20, 0xb6, 0xa4, 0xcc, 0xaa, 0x90, 0xc4, 0x74, 0x25, 0x0f, 0x2e, 0x3e, 0x24, 0xc3, 0x0b,
	0x72, 0x2a, 0x85, 0x44, 0xb8, 0x58, 0x5d, 0x8b, 0x8a, 0xf2, 0xf2, 0xa1, 0xc6, 0x42, 0x38, 0x42,
	0x02, 0x5c, 0xcc, 0xbe, 0x89, 0xe9, 0x12, 0x4c, 0x60, 0xcd, 0x20, 0xa6, 0x10, 0x1f, 0x17, 0x93,
	0x67, 0x8a, 0x04, 0xb3, 0x02, 0xa3, 0x06, 0x73, 0x10, 0x93, 0x67, 0x8a, 0x92, 0x1b, 0x17, 0x0f,
	0xdc, 0x52, 0x0a, 0xcc, 0x31, 0x6a, 0x64, 0xe4, 0x62, 0x77, 0x2f, 0x4a, 0x4d, 0x2d, 0x49, 0x2d,
	0x12, 0xb2, 0xe5, 0xe2, 0x84, 0xbb, 0x4e, 0x48, 0x1c, 0x12, 0x2c, 0x7a, 0xe8, 0x81, 0x21, 0x25,
	0x8a, 0x29, 0x51, 0x90, 0x53, 0xa9, 0xc4, 0x20, 0x64, 0xce, 0xc5, 0x0e, 0x75, 0x92, 0x10, 0x5c,
	0x0d, 0x4a, 0xb8, 0x48, 0x09, 0xa3, 0x0b, 0x83, 0x35, 0x26, 0xb1, 0x81, 0x45, 0x8d, 0x01, 0x01,
	0x00, 0x00, 0xff, 0xff, 0x3f, 0xe5, 0xa4, 0x99, 0x91, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GreeterClient is the client API for Greeter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GreeterClient interface {
	Snowflake(ctx context.Context, in *SnowflakeRequest, opts ...grpc.CallOption) (*SnowflakeReply, error)
	Segment(ctx context.Context, in *SegmentRequest, opts ...grpc.CallOption) (*SegmentReply, error)
}

type greeterClient struct {
	cc *grpc.ClientConn
}

func NewGreeterClient(cc *grpc.ClientConn) GreeterClient {
	return &greeterClient{cc}
}

func (c *greeterClient) Snowflake(ctx context.Context, in *SnowflakeRequest, opts ...grpc.CallOption) (*SnowflakeReply, error) {
	out := new(SnowflakeReply)
	err := c.cc.Invoke(ctx, "/proto.Greeter/Snowflake", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) Segment(ctx context.Context, in *SegmentRequest, opts ...grpc.CallOption) (*SegmentReply, error) {
	out := new(SegmentReply)
	err := c.cc.Invoke(ctx, "/proto.Greeter/Segment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GreeterServer is the server API for Greeter service.
type GreeterServer interface {
	Snowflake(context.Context, *SnowflakeRequest) (*SnowflakeReply, error)
	Segment(context.Context, *SegmentRequest) (*SegmentReply, error)
}

// UnimplementedGreeterServer can be embedded to have forward compatible implementations.
type UnimplementedGreeterServer struct {
}

func (*UnimplementedGreeterServer) Snowflake(ctx context.Context, req *SnowflakeRequest) (*SnowflakeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Snowflake not implemented")
}
func (*UnimplementedGreeterServer) Segment(ctx context.Context, req *SegmentRequest) (*SegmentReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Segment not implemented")
}

func RegisterGreeterServer(s *grpc.Server, srv GreeterServer) {
	s.RegisterService(&_Greeter_serviceDesc, srv)
}

func _Greeter_Snowflake_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SnowflakeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).Snowflake(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Greeter/Snowflake",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).Snowflake(ctx, req.(*SnowflakeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_Segment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SegmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).Segment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Greeter/Segment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).Segment(ctx, req.(*SegmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Greeter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Greeter",
	HandlerType: (*GreeterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Snowflake",
			Handler:    _Greeter_Snowflake_Handler,
		},
		{
			MethodName: "Segment",
			Handler:    _Greeter_Segment_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "example.proto",
}
